'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Data
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
'
Namespace com.infor.support.discrete1
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="ServiceSoap", [Namespace]:="http://infor.com/")>  _
    Partial Public Class Service
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private GetSLPatchDescOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSLRecSaasPatchesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSLRecPatchesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSLPatchesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.Admin.My.MySettings.Default.Admin_com_infor_support_discrete1_Service
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event GetSLPatchDescCompleted As GetSLPatchDescCompletedEventHandler
        
        '''<remarks/>
        Public Event GetSLRecSaasPatchesCompleted As GetSLRecSaasPatchesCompletedEventHandler
        
        '''<remarks/>
        Public Event GetSLRecPatchesCompleted As GetSLRecPatchesCompletedEventHandler
        
        '''<remarks/>
        Public Event GetSLPatchesCompleted As GetSLPatchesCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://infor.com/GetSLPatchDesc", RequestNamespace:="http://infor.com/", ResponseNamespace:="http://infor.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSLPatchDesc(ByVal sRelease As String, ByVal sAPAR As String, ByVal bSaasCap As Boolean) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetSLPatchDesc", New Object() {sRelease, sAPAR, bSaasCap})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSLPatchDescAsync(ByVal sRelease As String, ByVal sAPAR As String, ByVal bSaasCap As Boolean)
            Me.GetSLPatchDescAsync(sRelease, sAPAR, bSaasCap, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSLPatchDescAsync(ByVal sRelease As String, ByVal sAPAR As String, ByVal bSaasCap As Boolean, ByVal userState As Object)
            If (Me.GetSLPatchDescOperationCompleted Is Nothing) Then
                Me.GetSLPatchDescOperationCompleted = AddressOf Me.OnGetSLPatchDescOperationCompleted
            End If
            Me.InvokeAsync("GetSLPatchDesc", New Object() {sRelease, sAPAR, bSaasCap}, Me.GetSLPatchDescOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSLPatchDescOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSLPatchDescCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSLPatchDescCompleted(Me, New GetSLPatchDescCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://infor.com/GetSLRecSaasPatches", RequestNamespace:="http://infor.com/", ResponseNamespace:="http://infor.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSLRecSaasPatches(ByVal sRelease As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetSLRecSaasPatches", New Object() {sRelease})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSLRecSaasPatchesAsync(ByVal sRelease As String)
            Me.GetSLRecSaasPatchesAsync(sRelease, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSLRecSaasPatchesAsync(ByVal sRelease As String, ByVal userState As Object)
            If (Me.GetSLRecSaasPatchesOperationCompleted Is Nothing) Then
                Me.GetSLRecSaasPatchesOperationCompleted = AddressOf Me.OnGetSLRecSaasPatchesOperationCompleted
            End If
            Me.InvokeAsync("GetSLRecSaasPatches", New Object() {sRelease}, Me.GetSLRecSaasPatchesOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSLRecSaasPatchesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSLRecSaasPatchesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSLRecSaasPatchesCompleted(Me, New GetSLRecSaasPatchesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://infor.com/GetSLRecPatches", RequestNamespace:="http://infor.com/", ResponseNamespace:="http://infor.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSLRecPatches(ByVal sRelease As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetSLRecPatches", New Object() {sRelease})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSLRecPatchesAsync(ByVal sRelease As String)
            Me.GetSLRecPatchesAsync(sRelease, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSLRecPatchesAsync(ByVal sRelease As String, ByVal userState As Object)
            If (Me.GetSLRecPatchesOperationCompleted Is Nothing) Then
                Me.GetSLRecPatchesOperationCompleted = AddressOf Me.OnGetSLRecPatchesOperationCompleted
            End If
            Me.InvokeAsync("GetSLRecPatches", New Object() {sRelease}, Me.GetSLRecPatchesOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSLRecPatchesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSLRecPatchesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSLRecPatchesCompleted(Me, New GetSLRecPatchesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://infor.com/GetSLPatches", RequestNamespace:="http://infor.com/", ResponseNamespace:="http://infor.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSLPatches(ByVal sRelease As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetSLPatches", New Object() {sRelease})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSLPatchesAsync(ByVal sRelease As String)
            Me.GetSLPatchesAsync(sRelease, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSLPatchesAsync(ByVal sRelease As String, ByVal userState As Object)
            If (Me.GetSLPatchesOperationCompleted Is Nothing) Then
                Me.GetSLPatchesOperationCompleted = AddressOf Me.OnGetSLPatchesOperationCompleted
            End If
            Me.InvokeAsync("GetSLPatches", New Object() {sRelease}, Me.GetSLPatchesOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSLPatchesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSLPatchesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSLPatchesCompleted(Me, New GetSLPatchesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub GetSLPatchDescCompletedEventHandler(ByVal sender As Object, ByVal e As GetSLPatchDescCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSLPatchDescCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub GetSLRecSaasPatchesCompletedEventHandler(ByVal sender As Object, ByVal e As GetSLRecSaasPatchesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSLRecSaasPatchesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub GetSLRecPatchesCompletedEventHandler(ByVal sender As Object, ByVal e As GetSLRecPatchesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSLRecPatchesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub GetSLPatchesCompletedEventHandler(ByVal sender As Object, ByVal e As GetSLPatchesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSLPatchesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
End Namespace
