//PROJECT NAME: Logistics
//CLASS NAME: ICoCustomerValid2.cs

using System;
using System.Data;
using CSI.Data.CRUD;
using CSI.Data.SQL.UDDT;

namespace CSI.Logistics.Customer
{
	public interface ICoCustomerValid2
	{
		(int? ReturnCode, decimal? ExchRate,
		string CustNum,
		int? CustSeq,
		int? ShipmentExists,
		string BillToAddress,
		string ShipToAddress,
		string Contact,
		string Phone,
		string BillToContact,
		string BillToPhone,
		string ShipToContact,
		string ShipToPhone,
		string CorpCust,
		string CorpCustName,
		string CorpCustContact,
		string CorpCustPhone,
		int? CorpAddress,
		string CurrCode,
		int? UseExchRate,
		string Whse,
		string ShipCode,
		string ShipCodeDesc,
		int? ShipPartial,
		int? ShipEarly,
		int? Consolidate,
		int? Summarize,
		string InvFreq,
		int? Einvoice,
		string TermsCode,
		string TermsCodeDesc,
		string Slsman,
		string PriceCode,
		string PriceCodeDesc,
		string EndUserType,
		string EndUserTypeDesc,
		int? ApsPullUp,
		string TaxCode1,
		string TaxDesc1,
		string TaxCode2,
		string TaxDesc2,
		string FrtTaxCode1,
		string FrtTaxDesc1,
		string FrtTaxCode2,
		string FrtTaxDesc2,
		string MiscTaxCode1,
		string MiscTaxDesc1,
		string MiscTaxCode2,
		string MiscTaxDesc2,
		string TransNat,
		string TransNat2,
		string Delterm,
		string ProcessInd,
		int? CusLcrReqd,
		int? CusUseExchRate,
		int? OnCreditHold,
		string Infobar,
		int? ShipmentApprovalRequired,
		int? ShipHold,
		int? CurAllowOver,
		int? CurpAllowOver,
		int? CustIncludePrice,
		int? ConsignableOrder,
		decimal? shipped_over_ordered_qty_tolerance,
		decimal? shipped_under_ordered_qty_tolerance,
		int? days_shipped_after_due_date_tolerance,
		int? days_shipped_before_due_date_tolerance,
		int? EdiOrder,
		int? LcrRequired,
		int? EnableOrderType,
		int? EnableConsolidate,
		int? EnableEffExpDate) CoCustomerValid2Sp(string CoNum,
		string OldCustNum,
		Guid? RowPointer,
		DateTime? OrderDate,
		decimal? ExchRate,
		string CustNum,
		int? CustSeq,
		int? ShipmentExists,
		string BillToAddress,
		string ShipToAddress,
		string Contact,
		string Phone,
		string BillToContact,
		string BillToPhone,
		string ShipToContact,
		string ShipToPhone,
		string CorpCust,
		string CorpCustName,
		string CorpCustContact,
		string CorpCustPhone,
		int? CorpAddress,
		string CurrCode,
		int? UseExchRate,
		string Whse,
		string ShipCode,
		string ShipCodeDesc,
		int? ShipPartial,
		int? ShipEarly,
		int? Consolidate,
		int? Summarize,
		string InvFreq,
		int? Einvoice,
		string TermsCode,
		string TermsCodeDesc,
		string Slsman,
		string PriceCode,
		string PriceCodeDesc,
		string EndUserType,
		string EndUserTypeDesc,
		int? ApsPullUp,
		string TaxCode1Type,
		string TaxCode1,
		string TaxDesc1,
		string TaxCode2Type,
		string TaxCode2,
		string TaxDesc2,
		string FrtTaxCode1Type,
		string FrtTaxCode1,
		string FrtTaxDesc1,
		string FrtTaxCode2Type,
		string FrtTaxCode2,
		string FrtTaxDesc2,
		string MiscTaxCode1Type,
		string MiscTaxCode1,
		string MiscTaxDesc1,
		string MiscTaxCode2Type,
		string MiscTaxCode2,
		string MiscTaxDesc2,
		string TransNat,
		string TransNat2,
		string Delterm,
		string ProcessInd,
		int? CusLcrReqd,
		int? CusUseExchRate,
		int? OnCreditHold,
		string Infobar,
		int? ShipmentApprovalRequired,
		int? ShipHold,
		int? CurAllowOver = null,
		int? CurpAllowOver = null,
		int? CustIncludePrice = null,
		int? Consignment = null,
		int? ConsignableOrder = null,
		decimal? shipped_over_ordered_qty_tolerance = null,
		decimal? shipped_under_ordered_qty_tolerance = null,
		int? days_shipped_after_due_date_tolerance = null,
		int? days_shipped_before_due_date_tolerance = null,
		int? EdiOrder = null,
		int? LcrRequired = null,
		int? EnableOrderType = null,
		int? EnableConsolidate = null,
		int? EnableEffExpDate = null,
		DateTime? CoOrderDate = null);
	}
}

